"""add_created_at_updated_at_timestamps

Revision ID: c4b96578cc67
Revises: 1a31ce608336
Create Date: 2025-08-01 17:26:59.857729

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'c4b96578cc67'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns as nullable first, then set default values, then make them non-nullable
    op.add_column('item', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('item', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    
    # Set default values for existing records
    op.execute("UPDATE item SET created_at = NOW(), updated_at = NOW() WHERE created_at IS NULL")
    op.execute('UPDATE "user" SET created_at = NOW(), updated_at = NOW() WHERE created_at IS NULL')
    
    # Make columns non-nullable
    op.alter_column('item', 'created_at', nullable=False)
    op.alter_column('item', 'updated_at', nullable=False)
    op.alter_column('user', 'created_at', nullable=False)
    op.alter_column('user', 'updated_at', nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_column('item', 'updated_at')
    op.drop_column('item', 'created_at')
    # ### end Alembic commands ###
